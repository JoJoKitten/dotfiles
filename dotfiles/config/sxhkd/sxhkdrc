#           _     _       _ 
#  _____  _| |__ | | ____| |
# / __\ \/ / '_ \| |/ / _` |
# \__ \>  <| | | |   < (_| |
# |___/_/\_\_| |_|_|\_\__,_|

# This file includes wm independent bindings.

# terminal with tmux
super + shift + Return
    {{@@ term @@}} -e tmux

# terminal
super + Return
    {{@@ term @@}} -e tmux

# program launcher
super + p
    exec dmenu_run -fn 'monospace:size=10' -nb '#202020' -nf '#b0b0b0' -sb '#508050' -sf '#e0e0e0'

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

# clipmenu
super + {c,i}
    clipmenu -i -fn Terminus:size=12 -l 20 -i -b {_,&& xdotool type "$(xclip -o)"}

# insert host name
super + shift + i
    dmenu_host

# insert 'set -o vi'
super + shift + v
    sleep 0.3 && xdotool type --clearmodifiers 'set -o vi' && xdotool key --clearmodifiers Return

# audio
{_,shift + }XF86AudioMute
    pactl set-sink-mute {0,1} toggle

{_,shift + }XF86Audio{Lower,Raise}Volume
    pactl set-sink-volume {0,1} {-,+}5%

super + control + {_,shift + }{minus,plus}
    pactl set-sink-volume {0,1} {-,+}5%

# sreen brightness
XF86MonBrightness{Up,Down}
    xbacklight {-inc,-dec} 10

# screenshots of {whole screen, window, selection}
{_,super + ,super + shift + } Print 
    sleep 0.2 && scrot {_,-u,-s}

# mouse control
super + d
    xmouseless

# launch applications
super + o ; {f,c,r,l,v,t,m,n,p} 
    {firefox, \
    chromium, \
    $TERMINAL -e ranger, \
    $TERMINAL -e tmux new-session lf \; set-option status on, \
    $TERMINAL -e tmux new-session nvim -c ":colorscheme gruvbox", \
    $TERMINAL -e tmux new-session -s GEN \; rename-window gen \; set status on, \
    thunderbird, \
    pcmanfm, \
    pianoteq}

# dotfiles
super + space; d ; {p,i,c,o}
    {$TERMINAL -e ~/dotfiles/pull.sh, \
    ~/dotfiles/dotdrop.sh install -f, \
    $TERMINAL -e ~/dotfiles/push.sh, \
    cd ~/dotfiles && $TERMINAL}

# cnee
super + space ; c ; {r,p}
    cnee_dmenu {record,play}

# keyboard layout
super + space ; k; {d,n,m}
    {setxkbmap de && xset r 51, \
    setxkbmap de neo, \
    setxkbmap lv && xmodmap ~/my_neo_de.xmodmap && xset -r 51}

# tools
super + space ; t; {n,i,e,d,t,k,u,h}
    {$TERMINAL -e sudo nethogs, \
    dmenu_fa_icons, \
    dmenu_emojis, \
    $TERMINAL -e bash -c 'echo  Translate to German: && read tmp && echo $tmp | trans en:de -v -theme random', \
    $TERMINAL -e bash -c 'echo  Translate to English: && read tmp && echo $tmp | trans de:en -v -theme random', \
    cat ~/wiki/kontakte.md | dmenu -i -l 20, \
    $TERMINAL -e bash -c "update_time && read", \
    dmenu_host}


{%@@ if wm == "bspwm" @@%}
# restart bspwm
super + shift + r
    bspc wm -r

# close and kill
super + shift + {_,ctrl + }q
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# set the window state
super + {t,shift + t,shift + space,shift + f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Change focused window and move window
super + {_,shift + }{h,j,k,l}
  LAYOUT=$(bspc query -T -d | jq -r .layout); \
  [[ "$LAYOUT" == "tiled" ]] && bspc node -{f,s} {west,south,north,east}.local; \
  [[ "$LAYOUT" == "monocle" ]] && bspc node -{f,s} {prev,next,prev,next}.local

# focus the next/previous desktop in the current monitor
super + {_,shift} + n
    bspc desktop -f {next,prev}.local

# focus monitor / move workspace to monitor
super + {_,shift} + {comma,period}
    bspc {monitor -f,desktop -m} {west,east}.local

# focus the last node/desktop
super + {a,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + ctrl + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

# preselect the direction
super + ctrl + {v,y}
    bspc node -p {south,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# expand a window by moving one of its side outward
super + ctrl + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + ctrl + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

{%@@ endif @@%}


{%@@ if wm == "i3" or wm == "bspwm" @@%}
# scratchpad terminal
super + s
    tdrop -ma -w 80% -x 10% -h 80% -y 10% -n 1 -s DROP_T {{@@ term @@}}

# scratchpad file manager
super + f
    tdrop -ma -w 80% -x 10% -h 80% -y 10% -n 2 -s DROP_F {{@@ term @@}}

# toggle polybar
super + b 
    polybar-msg cmd toggle
{%@@ endif @@%}

{#@@ no system tray in awesome bar @@#}
{%@@ if wm == "awesome" @@%}
# system tray
super + shift + s
    toggle_stalonetray
{%@@ endif @@%}
                          
{%@@ if wm == "i3" or wm == "bspwm" @@%}
# categorized menu
super + z
    morc_menu
{%@@ endif @@%}
