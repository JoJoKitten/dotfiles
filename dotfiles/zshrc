#          _     
#  _______| |__  
# |_  / __| '_ \ 
#  / /\__ \ | | |
# /___|___/_| |_|
#               

# history
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_find_no_dups
setopt hist_save_no_dups
setopt hist_verify
setopt inc_append_history
setopt share_history

# prompt
PS1="%B%{$fg[yellow]%}[%~]%{$reset_color%}%b "

# completion
setopt autocd extendedglob
unsetopt beep
bindkey -v
zstyle :compinstall filename '/home/jbensmann/.zshrc'

autoload -Uz compinit
autoload -U colors && colors

zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zmodload zsh/complist
compinit

# Include hidden files in autocomplete:
_comp_options+=(globdots)

# Use vim keys in tab complete menu:
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char

KEYTIMEOUT=1

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'

  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}

# Use beam shape cursor on startup.
echo -ne '\e[5 q'
# Use beam shape cursor for each new prompt.
preexec() { echo -ne '\e[5 q' ;}


# color
alias grep="grep --color=auto"
alias diff="diff --color=auto"

# exa as ls replacement
alias ls='exa --group-directories-first'
alias l='exa -l --group-directories-first'
alias la='exa -la --group-directories-first'
# M-l
bindkey -s '^[l' 'ls\n'


# fzf
source /usr/share/fzf/completion.zsh
source /usr/share/fzf/key-bindings.zsh

# find with fzf and open in editor
alias e='fzf --preview="head -$LINES {}" | xargs -r nvim'

FZF_DEFAULT_COMMAND="fd . $HOME"
FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
FZF_ALT_C_COMMAND="fd -t d . $HOME"

# M-i to insert word from current tmux pane
_tmux_copy() { tmux_copy }
zle -N _tmux_copy
bindkey '^[i' _tmux_copy

# M-d to show tasks with taskwarrior
bindkey -s '^[d' 'clear; task\n'

# C-k to kill process with fzf
bindkey -s '^k' 'kill \t'

# M-s to open ssh connection with fzf
bindkey -s '^[s' 'fzf_ssh\n'

# M-f as alternative to C-t (select file)
bindkey '^[f' fzf-file-widget

# other aliases
alias fk=fzf_kill
alias ss='sudo systemctl'
alias v='nvim'
alias ka='killall'

alias p='pacman'
alias pss='pacman -Ss'
alias sp='sudo pacman'
alias spy='sudo pacman -Sy'
alias sps='sudo pacman -S'
alias spr='sudo pacman -Rns'

alias g='git'
alias gs='git status'
alias ga='git add'
alias gc='git commit'
alias gd='git diff'
alias gl='git log'
alias gpl='git pull'
alias gps='git push'

alias ta='task add'
alias tm='task modify'
alias td='task done'
alias tdel='task delete'
function tl {
    # changes the lee attribute
    # $1: id(s) of the task(s)
    # $2: lee value (1-6)
    task $1 modify lee:
    [ -n "$(task lee:$2 ids)" ] && tl $(task lee:$2 ids) $(( $2 + 1 ))
    task $1 modify lee:$2
}
function tlu {
    # rearranges the lee attributes so that they count from 1 up
    for t in 1 1 1 1 1; do
        for i in 2 3 4 5 6; do
            [ -n "$(task lee:$i ids)" ] && [ -z "$(task lee:$(($i-1)) ids)" ] && task $(task lee:$i ids) modify lee:$(($i-1))
        done
    done
}

alias cht='cht.sh'
alias trde='trans de:en -v -theme random'
alias tred='trans en:de -v -theme random'

alias ku='kubectl'

# syntax highlighting
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
# commands starting with 'rm -' in red
ZSH_HIGHLIGHT_PATTERNS=('rm -r*' 'fg=white,bold,bg=red')
