#!/bin/sh
# periodically sets the status bar content in dwm

delim=" | "

my_vol() {
    sink_name=$(pacmd stat | sed -n 's/Default sink name: \(.*\)/\1/p')
    vol_info=$(pactl list sinks | grep -m 1 "$sink_name" -A 7)
    vol=$(echo "$vol_info" | sed -n 's/\tLautst[^%]* \([^%]*\).*/\1/p')
    muted=$(echo "$vol_info" | sed -n 's/.*Stumm: \([^ ]*\).*/\1/p')
    [ "$muted" = "ja" ] && vol=mut
    echo " $vol"
}

update_status() {
    # calculate bandwidth
    net_device=$(ip addr | sed -n 's/.: \([^:]*\).*state UP.*/\1/p')
    if [ "$net_device" != "" ]; then
        old_time=$new_time
        new_time=$(( $(date +%s%N) / 1000000 ))
        old_bytes=$new_bytes
        new_bytes=$(cat "/sys/class/net/$net_device/statistics/rx_bytes")
        bandwith=$(((new_bytes - old_bytes) / (new_time - old_time)))
    else
        bandwith='-'
    fi
}

my_status() {
    echo -n " "

    # network bandwidth
    echo " $bandwith"

    # cpu
    echo " $(top -bn1 | sed -n 's/^.CPU.*: *\([^ ]*\).*/\1/p' | awk '{ total += $1; count++ } END { printf "%2s%", int(total/count) }')"

    # memory
    echo " $(free | awk '/^Speicher/{print int(100*$3/$2)"%"}')"

    # volume
    my_vol

    # date
    date "+ %d.%m."

    # time
    date "+ %H:%M"

    echo ""
}


while true; do
    update_status
    xsetroot -name "$(my_status | paste -sd D | sed "s/D/$delim/g" )"
    sleep 3
done
